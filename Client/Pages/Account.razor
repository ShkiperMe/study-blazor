
  
@page "/user/{id:int}"
@inject IAuthService AuthService
@attribute [Authorize(Roles = "Admin")]

<h3>Change Password @user.Email</h3>

<div class="text-success">
    <span>@message</span>
</div>
<EditForm Model="request" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <input type="hidden" id="id" @bind="request.Id" class="form-control" />
    <div class="mb-3">
        <label for="password">New Password</label>
        <InputText id="password" @bind-Value="request.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => request.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm New Password</label>
        <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => request.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Apply</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    User user = new User();
    UserChangePassword request = new UserChangePassword();
    string message = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        User dbUser = (await AuthService.GetUser(Id)).Data;
        if (dbUser == null)
        {
            return;
        }
        user = dbUser;
        request.Id = Id;
    }

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(request);
        message = result.Message;
    }
}